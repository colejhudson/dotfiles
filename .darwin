#!/usr/bin/env fish

if not test -f $USER_CONFIG_LOCK
    echo 'Configuring account defaults.'
    chflags nohidden ~/Library
    launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null

    defaults write com.apple.LaunchServices LSHandlers

    defaults write com.apple.screensaver askForPassword -int 1
    defaults write com.apple.screensaver askForPasswordDelay -int 0

    defaults write com.apple.Safari UniversalSearchEnabled -bool false
    defaults write com.apple.Safari SuppressSearchSuggestions -bool true

    defaults write com.apple.finder ShowPathbar -bool true
    defaults write com.apple.finder AppleShowAllFiles -bool true
    defaults write com.apple.finder EmptyTrashSecurely -bool true
    defaults write com.apple.finder FXPreferredViewStyle -string 'Nlsv'
    defaults write com.apple.finder FXDefaultSearchScope -string 'SCcf'
    defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

    defaults write NSGlobalDomain AppleShowAllExtensions -bool true
    defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
    defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
    defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
    defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
    defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

    defaults write com.apple.dashboard mcx-disabled -bool true
    defaults write com.apple.terminal StringEncodings -array 4
    defaults write com.apple.dock mouse-over-hilite-stack -bool true
    defaults write com.apple.LaunchServices LSQuarantine -bool false
    defaults write com.apple.print.PrintingPrefs 'Quit When Finished' -bool true
    defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

    # It might be prudent here to make this a symbollic link to the yes binary such that 
    # I can directly execute it, or have it be an interpretable bash script with the 'true' keyword
    # its sole contents
    touch $USER_CONFIG_LOCK
    echo 'Do not remove this file unless you wish for your account to be configured again.' > $USER_CONFIG_LOCK
}

if not test -f $SYS_CONFIG_LOCK
    echo 'Configuring system defaults.'
    sudo scutil --set HostName $COMPUTER_NAME
    sudo scutil --set ComputerName $COMPUTER_NAME
    sudo scutil --set LocalHostName $COMPUTER_NAME
    sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string $COMPUTER_NAME

    sudo nvram SystemAudioVolume=''
    sudo systemsetup -setrestartfreeze on
    sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

    # It might be prudent here to make this a symbollic link to the yes binary such that 
    # I can directly execute it, or have it be an interpretable bash script with the 'true' keyword
    # its sole contents
    touch $SYS_CONFIG_LOCK
    echo 'Do not remove this file unless you wish for your system to be configured again.' > $SYS_CONFIG_LOCK
}

if not test -f $HOME/.ssh/id_rsa.pub
		ssh-keygen
    eval (ssh-agent -s)
    ssh-add
}

if test -d $NVM_DIR
    if test -f $NVM_DIR/nvm.sh ]]
      source $NVM_DIR/nvm.sh
    end
    if test -f $NVM_DIR/bash_completion
      source $NVM_DIR/bash_completion
    end
end

if not test -f /Applications/Xcode.app
  xcode-select --install
  sudo ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include /usr/include 
end
