#!/usr/bin/env fish

if not test $USER_IS_CONFIGURED
  set -U MACOS_VERSION (sw_vers -productVersion)
 
  chflags nohidden ~/Library

  launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null

  defaults write com.apple.LaunchServices LSHandlers

  defaults write com.apple.screensaver askForPassword -int 1
  defaults write com.apple.screensaver askForPasswordDelay -int 0

  defaults write com.apple.Safari UniversalSearchEnabled -bool false
  defaults write com.apple.Safari SuppressSearchSuggestions -bool true

  defaults write com.apple.finder ShowPathbar -bool true
  defaults write com.apple.finder AppleShowAllFiles -bool true
  defaults write com.apple.finder EmptyTrashSecurely -bool true
  defaults write com.apple.finder FXPreferredViewStyle -string 'Nlsv'
  defaults write com.apple.finder FXDefaultSearchScope -string 'SCcf'
  defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

  defaults write NSGlobalDomain AppleShowAllExtensions -bool true
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

  defaults write com.apple.dashboard mcx-disabled -bool true
  defaults write com.apple.terminal StringEncodings -array 4
  defaults write com.apple.dock mouse-over-hilite-stack -bool true
  defaults write com.apple.LaunchServices LSQuarantine -bool false
  defaults write com.apple.print.PrintingPrefs 'Quit When Finished' -bool true
  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

  if not test -f $HOME/.vimrc
    ln -s (pwd)/.vimrc $HOME/.vimrc
  end

  if not test -f $HOME/.tmux.conf
    ln  -s (pwd)/.tmux.conf $HOME/.tmux.conf
  end

  if not test -f $HOME/.ctags
    ln -s (pwd)/.ctags $HOME/.ctags
  end

  if not test -f $HOME/.gitconfig
    ln -s (pwd)/.gitconfig $HOME/.gitconfig
  end

  if not test -ff $HOME/.gitignore
    ln -s  (pwd)/.gitignore $HOME/.tmux.conf
  end

  if not test -d $HOME/.ssh
    ssh-keygen
    eval (ssh-agent -s)
    ssh-add
  end

  if not test -d $HOME/.gnupg
    # TODO
    #  - generate a key
    #  - generate a revocation key
    #  - generate a signing sub key
    #  - generate a fingerprint
    #  - spit out the private and public keys to a secure device
    #  - delete the private keys from the keyring
    #  - notify keybase
    # gnupg --gen
  end

  set -U USER_IS_CONFIGURED true
end

if not test $SYSTEM_IS_CONFIGURED
  set -l COMPUTER_NAME "colejhudson"

  sudo scutil --set HostName $COMPUTER_NAME
  sudo scutil --set ComputerName $COMPUTER_NAME
  sudo scutil --set LocalHostName $COMPUTER_NAME

  sudo nvram SystemAudioVolume=''
  
  sudo systemsetup -setrestartfreeze on

  sudo defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false
  sudo defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

  sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName
  sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string $COMPUTER_NAME

  sudo defaults write com.apple.terminal StringEncodings -array 4  
  sudo defaults write com.apple.terminal SecureKeyboardEntry -bool true

  if not test -d /Applications/Xcode.app
    xcode-select --install
    set MACOS_SDKS /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
    sudo ln -s $MACOS_SDKS/MacOSX.sdk/usr/include /usr/include 
  end

  set -U SYSTEM_IS_CONFIGURED true
end
